#!/bin/bash


# ============================ MVC ============================
function touchModel() {
    echo "import Foundation" > $project_full_path/Model/Model.swift
    echo "" >> $project_full_path/Model/Model.swift
    echo "class Model {" >> $project_full_path/Model/Model.swift
    echo "" >> $project_full_path/Model/Model.swift
    echo "}" >> $project_full_path/Model/Model.swift
}

function touchView() {
    echo "import UIKit" > $project_full_path/View/View.swift
    echo "" >> $project_full_path/View/View.swift
    echo "class View: UIView {" >> $project_full_path/View/View.swift
    echo "" >> $project_full_path/View/View.swift
    echo "    override init(frame: CGRect) {" >> $project_full_path/View/View.swift
    echo "        super.init(frame: frame)" >> $project_full_path/View/View.swift
    echo "        self.setupView()" >> $project_full_path/View/View.swift
    echo "    }" >> $project_full_path/View/View.swift
    echo "" >> $project_full_path/View/View.swift
    echo "    required init?(coder aDecoder: NSCoder) {" >> $project_full_path/View/View.swift
    echo "         super.init(coder: aDecoder)" >> $project_full_path/View/View.swift
    echo "    }" >> $project_full_path/View/View.swift
    echo "}" >> $project_full_path/View/View.swift
}

function touchController() {
    echo "import UIKit" > $project_full_path/Controller/Controller.swift
    echo "" >> $project_full_path/Controller/Controller.swift
    echo "class Controller: UIViewController {" >> $project_full_path/Controller/Controller.swift
    echo "    var model: Model!" >> $project_full_path/Controller/Controller.swift
    echo "    var view: View!" >> $project_full_path/Controller/Controller.swift
    echo "" >> $project_full_path/Controller/Controller.swift
    echo "     override func viewDidLoad() {" >> $project_full_path/Controller/Controller.swift
    echo "         super.viewDidLoad()" >> $project_full_path/Controller/Controller.swift
    echo "     }" >> $project_full_path/Controller/Controller.swift
    echo "}" >> $project_full_path/Controller/Controller.swift
}

# ============================ MVVM ============================

function touchViewModel() {
    echo "import UIKit" > $project_full_path/ViewModel/ViewModel.swift
    echo "" >> $project_full_path/ViewModel/ViewModel.swift
    echo "class ViewModel {" >> $project_full_path/ViewModel/ViewModel.swift
    echo "" >> $project_full_path/ViewModel/ViewModel.swift
    echo "    init() {" >> $project_full_path/ViewModel/ViewModel.swift
    echo "" >> $project_full_path/ViewModel/ViewModel.swift
    echo "    }" >> $project_full_path/ViewModel/ViewModel.swift
    echo "" >> $project_full_path/ViewModel/ViewModel.swift
    echo "    deinit {" >> $project_full_path/ViewModel/ViewModel.swift
    echo "" >> $project_full_path/ViewModel/ViewModel.swift
    echo "    }" >> $project_full_path/ViewModel/ViewModel.swift
    echo "" >> $project_full_path/ViewModel/ViewModel.swift
    echo "}" >> $project_full_path/ViewModel/ViewModel.swift
}

# ============================ MVP ============================

# - Presenter :
function touchPresenterPresenter() {
    echo "import Foundation" > $project_full_path/Presenter/Presenter.swift
    echo "" >> $project_full_path/Presenter/Presenter.swift
    echo "class Presenter {" >> $project_full_path/Presenter/Presenter.swift
    echo "    weak var view: ViewInput?" >> $project_full_path/Presenter/Presenter.swift
    echo "" >> $project_full_path/Presenter/Presenter.swift
    echo "    private let output: ModuleOutput" >> $project_full_path/Presenter/Presenter.swift
    echo "" >> $project_full_path/Presenter/Presenter.swift
    echo "    init(output: ModuleOutput) {" >> $project_full_path/Presenter/Presenter.swift
    echo "        self.output = output" >> $project_full_path/Presenter/Presenter.swift
    echo "    }" >> $project_full_path/Presenter/Presenter.swift
    echo "}" >> $project_full_path/Presenter/Presenter.swift
    echo "" >> $project_full_path/Presenter/Presenter.swift
    echo "extension Presenter: ViewOutput {" >> $project_full_path/Presenter/Presenter.swift
    echo "" >> $project_full_path/Presenter/Presenter.swift
    echo "}" >> $project_full_path/Presenter/Presenter.swift
    echo "" >> $project_full_path/Presenter/Presenter.swift
    echo "extension Presenter: ModuleInput {" >> $project_full_path/Presenter/Presenter.swift
    echo "" >> $project_full_path/Presenter/Presenter.swift
    echo "}" >> $project_full_path/Presenter/Presenter.swift
}

function touchPresenterModuleIO() {
    echo "import Foundation" > $project_full_path/Presenter/ModuleIO.swift
    echo "" >> $project_full_path/Presenter/ModuleIO.swift
    echo "protocol ModuleInput: AnyObject {" >> $project_full_path/Presenter/ModuleIO.swift
    echo "" >> $project_full_path/Presenter/ModuleIO.swift
    echo "}" >> $project_full_path/Presenter/ModuleIO.swift
    echo "" >> $project_full_path/Presenter/ModuleIO.swift
    echo "protocol ModuleOutput: AnyObject {" >> $project_full_path/Presenter/ModuleIO.swift
    echo "" >> $project_full_path/Presenter/ModuleIO.swift
    echo "}" >> $project_full_path/Presenter/ModuleIO.swift
}

# - View : 
function touchViewController() {
    echo "import UIKit" > $project_full_path/View/ViewController.swift
    echo "" >> $project_full_path/View/ViewController.swift
    echo "class ViewController: UIViewController {" >> $project_full_path/View/ViewController.swift
    echo "    private let output: ViewOutput" >> $project_full_path/View/ViewController.swift
    echo "" >> $project_full_path/View/ViewController.swift
    echo "    init(output: ViewOutput) {" >> $project_full_path/View/ViewController.swift
    echo "        self.output = output" >> $project_full_path/View/ViewController.swift
    echo "        super.init(nibName: nil, bundle: nil)" >> $project_full_path/View/ViewController.swift
    echo "    }" >> $project_full_path/View/ViewController.swift
    echo "" >> $project_full_path/View/ViewController.swift
    echo "    required init?(coder: NSCoder) {" >> $project_full_path/View/ViewController.swift
    echo "        fatalError(\"init(coder:) has not been implemented\")" >> $project_full_path/View/ViewController.swift
    echo "    }" >> $project_full_path/View/ViewController.swift
    echo "" >> $project_full_path/View/ViewController.swift
    echo "    override func viewDidLoad() {" >> $project_full_path/View/ViewController.swift
    echo "        super.viewDidLoad()" >> $project_full_path/View/ViewController.swift
    echo "    }" >> $project_full_path/View/ViewController.swift
    echo "" >> $project_full_path/View/ViewController.swift
    echo "}" >> $project_full_path/View/ViewController.swift
}

function touchViewIO() {
    echo "import Foundation" > $project_full_path/View/ViewIO.swift
    echo "" >> $project_full_path/View/ViewIO.swift
    echo "protocol ViewInput: AnyObject {" >> $project_full_path/View/ViewIO.swift
    echo "" >> $project_full_path/View/ViewIO.swift
    echo "}" >> $project_full_path/View/ViewIO.swift
    echo "" >> $project_full_path/View/ViewIO.swift
    echo "protocol ViewOutput: AnyObject {" >> $project_full_path/View/ViewIO.swift
    echo "" >> $project_full_path/View/ViewIO.swift
    echo "}" >> $project_full_path/View/ViewIO.swift
}

# - ModuleBuilder.swift
function touchModuleBuilder() {
    echo "import Foundation" > $project_full_path/ModuleBuilder.swift
    echo "" >> $project_full_path/ModuleBuilder.swift
    echo "class ModuleBuilder {" >> $project_full_path/ModuleBuilder.swift
    echo "" >> $project_full_path/ModuleBuilder.swift
    echo "    func build(output: ModuleOutput) -> UIViewController {" >> $project_full_path/ModuleBuilder.swift
    echo "        let presenter = Presenter(output: output)" >> $project_full_path/ModuleBuilder.swift
    echo "        let viewController = ViewController(output: presenter)" >> $project_full_path/ModuleBuilder.swift
    echo "        presenter.view = view" >> $project_full_path/ModuleBuilder.swift
    echo "        view.presenter = presenter" >> $project_full_path/ModuleBuilder.swift
    echo "        return view" >> $project_full_path/ModuleBuilder.swift
    echo "    }" >> $project_full_path/ModuleBuilder.swift
    echo "" >> $project_full_path/ModuleBuilder.swift
    echo "}" >> $project_full_path/ModuleBuilder.swift
}

# ============================ MVP + Coordinator ============================

function touchCoordinator() {
    echo "import UIKit" >> $project_full_path/Coordinator/Coordinator.swift
    echo "" >> $project_full_path/Coordinator/Coordinator.swift
    echo "class Coordinator: CoordinatorProtocol {" >> $project_full_path/Coordinator/Coordinator.swift
    echo "    var navigationController: UINavigationController" >> $project_full_path/Coordinator/Coordinator.swift
    echo "" >> $project_full_path/Coordinator/Coordinator.swift
    echo "    init(navigationController: UINavigationController) {" >> $project_full_path/Coordinator/Coordinator.swift
    echo "        self.navigationController = navigationController" >> $project_full_path/Coordinator/Coordinator.swift
    echo "    }" >> $project_full_path/Coordinator/Coordinator.swift
    echo "" >> $project_full_path/Coordinator/Coordinator.swift
    echo "    func start() {" >> $project_full_path/Coordinator/Coordinator.swift
    echo "        let VC = ModuleBuilder().build(output: self)" >> $project_full_path/Coordinator/Coordinator.swift
    echo "        navigationController.pushViewController(VC, animated: true)" >> $project_full_path/Coordinator/Coordinator.swift
    echo "    }" >> $project_full_path/Coordinator/Coordinator.swift
    echo "" >> $project_full_path/Coordinator/Coordinator.swift
    echo "}" >> $project_full_path/Coordinator/Coordinator.swift
}

function touchCoordinatorProtocol() {
    echo "import UIKit" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "protocol CoordinatorProtocol {" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "    var navigationController: UINavigationController { get }" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "}" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "protocol Input: AnyObject {" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "}" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "protocol Output: AnyObject {" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
    echo "}" >> $project_full_path/Coordinator/CoordinatorProtocol.swift
}

# ============================ VIPER ============================
function touchInteractor() {
    echo "import Foundation" > $project_full_path/Interactor/Interactor.swift
    echo "" >> $project_full_path/Interactor/Interactor.swift
    echo "class Interactor {" >> $project_full_path/Interactor/Interactor.swift
    echo "" >> $project_full_path/Interactor/Interactor.swift
    echo "}" >> $project_full_path/Interactor/Interactor.swift
}

function touchRouter() {
    echo "import Foundation" > $project_full_path/Router/Router.swift
    echo "" >> $project_full_path/Router/Router.swift
    echo "class Router {" >> $project_full_path/Router/Router.swift
    echo "" >> $project_full_path/Router/Router.swift
    echo "}" >> $project_full_path/Router/Router.swift
}

# ============================ CLEAN ============================
function touchEntity() {
    echo "import Foundation" > $project_full_path/Entity/Entity.swift
    echo "" >> $project_full_path/Entity/Entity.swift
    echo "class Entity {" >> $project_full_path/Entity/Entity.swift
    echo "" >> $project_full_path/Entity/Entity.swift
    echo "}" >> $project_full_path/Entity/Entity.swift
}

function touchUseCase() {
    echo "import Foundation" > $project_full_path/UseCase/UseCase.swift
    echo "" >> $project_full_path/UseCase/UseCase.swift
    echo "class UseCase {" >> $project_full_path/UseCase/UseCase.swift
    echo "" >> $project_full_path/UseCase/UseCase.swift
    echo "}" >> $project_full_path/UseCase/UseCase.swift
}

function touchRepository() {
    echo "import Foundation" > $project_full_path/Repository/Repository.swift
    echo "" >> $project_full_path/Repository/Repository.swift
    echo "class Repository {" >> $project_full_path/Repository/Repository.swift
    echo "" >> $project_full_path/Repository/Repository.swift
    echo "}" >> $project_full_path/Repository/Repository.swift
}

# ============================ BASE FILE ============================
function touchBaseFile() {
    echo "import Foundation" > $project_full_path/$file_name.swift
    echo "" >> $project_full_path/$file_name.swift
    echo "class $file_name {" >> $project_full_path/$file_name.swift
    echo "" >> $project_full_path/$file_name.swift
    echo "}" >> $project_full_path/$file_name.swift
}

patt=$1
create_code=true

if [ "$#" -ge 3 ] && [ "$2" == "w" ]; then # mvc w /usr/.. ++ 
    create_code=false
    project_full_path=$3
    echo $project_full_path
elif [ "$#" -ge 2 ] && [ "$2" == "w" ]; then # mvc w ++ 
    create_code=false
    project_full_path="$PWD"
    echo $project_full_path
elif [ "$#" -ge 2 ]; then # mvc /usr/... ++
    project_full_path=$2
    echo $project_full_path
else # mvc ++ 
    project_full_path="$PWD"
fi


if [[ "$patt" == "mvc" ]]; then # success 
    mkdir $project_full_path/Model
    mkdir $project_full_path/View
    mkdir $project_full_path/Controller

    touch $project_full_path/Model/Model.swift
    touch $project_full_path/View/View.swift
    touch $project_full_path/Controller/Controller.swift
    # echo $project_full_path
    if $create_code; then
        touchModel
        touchView
        touchController
    fi

    echo "Success: Created $patt"
elif [[ "$patt" == "mvvm" ]]; then # success
    mkdir $project_full_path/Model
    mkdir $project_full_path/View
    mkdir $project_full_path/ViewModel

    touch $project_full_path/Model/Model.swift
    touch $project_full_path/View/View.swift
    touch $project_full_path/ViewModel/ViewModel.swift

    if $create_code; then
        touchModel
        touchView
        touchViewModel
    fi

    echo "Success: Created $patt"
elif [[ "$patt" == "mvp" ]]; then # success
    mkdir $project_full_path/View
    mkdir $project_full_path/Presenter

    touch $project_full_path/Presenter/Presenter.swift
    touch $project_full_path/Presenter/ModuleIO.swift
    touch $project_full_path/View/ViewController.swift
    touch $project_full_path/View/ViewIO.swift
    touch $project_full_path/ModuleBuilder.swift

    if $create_code; then
        touchPresenterPresenter
        touchPresenterModuleIO
        touchViewController
        touchViewIO
        touchModuleBuilder
    fi

    echo "Success: Created $patt"
elif [[ "$patt" == "mvp+c" ]]; then # success
    mkdir $project_full_path/View
    mkdir $project_full_path/Presenter
    mkdir $project_full_path/Coordinator

    touch $project_full_path/Presenter/Presenter.swift
    touch $project_full_path/Presenter/ModuleIO.swift
    touch $project_full_path/View/ViewController.swift
    touch $project_full_path/View/ViewIO.swift
    touch $project_full_path/Coordinator/Coordinator.swift
    touch $project_full_path/Coordinator/CoordinatorProtocol.swift
    touch $project_full_path/ModuleBuilder.swift

    if $create_code; then
        touchPresenterPresenter
        touchPresenterModuleIO
        touchViewController
        touchViewIO
        touchModuleBuilder
        touchCoordinator
        touchCoordinatorProtocol
    fi

    echo "Success: Created $patt"
elif [[ "$patt" == "viper" ]]; then
    mkdir $project_full_path/Model
    mkdir $project_full_path/View
    mkdir $project_full_path/Presenter
    mkdir $project_full_path/Interactor
    mkdir $project_full_path/Router
    mkdir $project_full_path/Entity

    touch $project_full_path/Model/Model.swift
    touch $project_full_path/View/View.swift
    touch $project_full_path/Presenter/Presenter.swift
    touch $project_full_path/Interactor/Interactor.swift
    touch $project_full_path/Router/Router.swift
    touch $project_full_path/Entity/Entity.swift

    if $create_code; then
        touchModel
        touchView
        touchPresenter
        touchInteractor
        touchRouter
        touchEntity
    fi

    echo "Success: Created $patt"
elif [[ "$patt" == "clean" ]]; then
    mkdir $project_full_path/Domain
    mkdir $project_full_path/Data
    mkdir $project_full_path/Presentation

    mkdir $project_full_path/Domain/Entity
    mkdir $project_full_path/Domain/UseCase
    mkdir $project_full_path/Domain/Repository

    mkdir $project_full_path/Data/Repository

    mkdir $project_full_path/Presentation/View
    mkdir $project_full_path/Presentation/Presenter
    mkdir $project_full_path/Presentation/Interactor
    mkdir $project_full_path/Presentation/Router

    touch $project_full_path/Domain/Entity/Entity.swift
    touch $project_full_path/Domain/Repository/Repository.swift
    touch $project_full_path/Domain/UseCase/UseCase.swift

    touch $project_full_path/Data/Repository/Repository.swift

    touch $project_full_path/Presentation/View/View.swift
    touch $project_full_path/Presentation/Presenter/Presenter.swift
    touch $project_full_path/Presentation/Interactor/Interactor.swift
    touch $project_full_path/Presentation/Router/Router.swift

    if $create_code; then
        touchDomainEntity
        touchDomainUseCase
        touchDomainRepository

        touchDataRepository

        touchPresentationView
        touchPresentationPresenter
        touchPresentationInteractor
        touchPresentationRouter
    fi

    echo "Success: Created $patt"
elif [[ $patt == "sw" ]]; then
    file_name=$2
    if [ -z $file_name ]; then
        echo "Error: File name is not specified"
        exit 1
    fi

    touch $project_full_path/$file_name.swift
    touchBaseFile

fi
